# Generated by Django 5.1.5 on 2025-02-04 16:36

import django.db.models.deletion
import podrings.community.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('creative', '0001_initial'),
        ('moderation', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Commitment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('run_on', models.DateField()),
                ('slot', models.CharField(choices=[('pre', 'Beginning of episode'), ('mid', 'Middle of episode'), ('post', 'End of episode')], max_length=4)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commitments', to=settings.AUTH_USER_MODEL)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commitments', to='creative.podcast')),
                ('promo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commitments', to='creative.promo')),
            ],
            options={
                'ordering': ('-run_on',),
                'get_latest_by': 'created_on',
            },
        ),
        migrations.CreateModel(
            name='Ring',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, max_length=255, null=True, verbose_name='URL')),
                ('popularity', models.IntegerField(default=0, editable=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('header', models.ImageField(blank=True, max_length=255, null=True, upload_to=podrings.community.models.Ring.upload_header)),
                ('rules', models.TextField()),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ring_approvals', to=settings.AUTH_USER_MODEL)),
                ('moderation_tags', models.ManyToManyField(blank=True, related_name='rings', to='moderation.tag')),
            ],
            options={
                'ordering': ('-popularity', '-approved_on'),
                'get_latest_by': 'created_on',
            },
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('kind', models.CharField(choices=[('admin', 'Admin'), ('member', 'Member')], max_length=6)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('invitee_name', models.CharField(max_length=100)),
                ('invitee_email', models.EmailField(max_length=255)),
                ('podcast', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='creative.podcast')),
                ('ring', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='community.ring')),
            ],
            options={
                'ordering': ('-created_on',),
                'get_latest_by': 'created_on',
            },
        ),
        migrations.CreateModel(
            name='Suggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordering', models.PositiveIntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggestions', to='creative.podcast')),
                ('promo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suggestions', to='creative.promo')),
            ],
            options={
                'ordering': ('ordering',),
                'get_latest_by': 'created_on',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('sent_on', models.DateTimeField(blank=True, null=True)),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='joining_request_approvals', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='joining_requests', to=settings.AUTH_USER_MODEL)),
                ('podcast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='joining_requests', to='creative.podcast')),
                ('ring', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='joining_requests', to='community.ring')),
            ],
            options={
                'ordering': ('-created_on',),
                'get_latest_by': 'created_on',
                'unique_together': {('podcast', 'ring')},
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='membership_approvals', to=settings.AUTH_USER_MODEL)),
                ('podcast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='creative.podcast')),
                ('ring', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='community.ring')),
            ],
            options={
                'ordering': ('created_on',),
                'get_latest_by': 'created_on',
                'unique_together': {('podcast', 'ring')},
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_edit', models.BooleanField(default=False)),
                ('can_approve', models.BooleanField(default=False)),
                ('can_remove', models.BooleanField(default=False)),
                ('can_delete', models.BooleanField(default=False)),
                ('can_transfer', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adminships', to=settings.AUTH_USER_MODEL)),
                ('ring', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admins', to='community.ring')),
            ],
            options={
                'ordering': ('-can_remove', '-can_approve', 'user__last_name', 'user__first_name', 'user__email', '-created_on'),
                'get_latest_by': 'created_on',
                'unique_together': {('user', 'ring')},
            },
        ),
    ]
